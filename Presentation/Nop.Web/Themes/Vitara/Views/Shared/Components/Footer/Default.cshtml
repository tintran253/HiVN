@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;

<!-- Footer -->
<footer class="footer">
    <div class="newsletter-wrap">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    @await Component.InvokeAsync("NewsletterBox")
                </div>
            </div>
        </div>
    </div>

    <!--newsletter-->
    <div class="footer-middle">
        <div class="container">
            <div class="row">
                <div class="col-md-3 col-sm-6">
                    <div class="footer-column pull-left">
                        <h4>@T("Footer.Information")</h4>
                        <ul class="links">
                            @if (Model.SitemapEnabled)
                            {
                                <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                            {
                                <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                            }
                            <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="footer-column pull-left">
                        <h4>@T("Footer.CustomerService")</h4>
                        <ul class="links">
                            <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                            @if (Model.NewsEnabled)
                            {
                                <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                            }
                            @if (Model.BlogEnabled)
                            {
                                <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                            }
                            @if (Model.ForumEnabled)
                            {
                                <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                            }
                            @if (Model.RecentlyViewedProductsEnabled)
                            {
                                <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                            }
                            @if (Model.CompareProductsEnabled)
                            {
                                <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                            }
                            @if (Model.NewProductsEnabled)
                            {
                                <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                            {
                                <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="footer-column pull-left">
                        <h4>@T("Footer.MyAccount")</h4>
                        <ul class="links">
                            <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                            <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                            <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                            @if (Model.ShoppingCartEnabled)
                            {
                                <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                            }
                            @if (Model.WishlistEnabled)
                            {
                                <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                            }
                            @if (Model.AllowCustomersToApplyForVendorAccount)
                            {
                                <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                            {
                                <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <h4>contact us</h4>
                    <div class="contacts-info">
                        <address>
                            <i class="add-icon">&nbsp;</i>123 Main Street, Anytown, <br>
                            &nbsp;CA 12345  USA
                        </address>
                        <div class="phone-footer"><i class="phone-icon">&nbsp;</i> +1 800 123 1234</div>
                        <div class="email-footer"><i class="email-icon">&nbsp;</i> <a href="mailto:support@example.com">support@example.com</a> </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-top">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 col-sm-6">

                    <div class="social" title="@T("Footer.FollowUs")">
                        @await Component.InvokeAsync("SocialButtons")
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6">
                    <div class="payment-accept"> <img src="~/Themes/Vitara/Content/images/payment-1.png" alt="PayPal"> <img src="~/Themes/Vitara/Content/images/payment-2.png" alt="VISA"> <img src="~/Themes/Vitara/Content/images/payment-3.png" alt="American Express"> <img src="~/Themes/Vitara/Content/images/payment-4.png" alt="Mastercard"> </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-bottom">
        <div class="container">
            <div class="row">
                <div class="col-sm-5 col-xs-12 coppyright">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</div>
                @if (Model.DisplayTaxShippingInfoFooter)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    <span class="footer-tax-shipping">
                        @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
                @await Component.InvokeAsync("StoreThemeSelector")

                <div class="col-sm-7 col-xs-12 company-links">
                        <ul class="links">
                            <li><a href="#" title="Gift Subscriptions">Gift Subscriptions</a></li>
                            <li><a href="#" title="Advertise Products">Advertise Products</a></li>
                            <li><a href="#" title="Terms & Conditions">Terms & Conditions</a></li>
                            <li class="last"><a href="#" title="Privacy Policy">Privacy Policy</a></li>
                        </ul>
                    </div>
                @if (!Model.HidePoweredByNopCommerce)
                {
                    <div class="footer-powered-by">
                        @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                            Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                        Powered by <a href="https://www.nopcommerce.com/">nopCommerce</a>
                    </div>
                }
                @await Component.InvokeAsync("Widget", new { widgetZone = "footer" })
            </div>
        </div>
    </div>
</footer>
<!-- End Footer -->




<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').click(function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>
<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $('.block .title').click(function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>